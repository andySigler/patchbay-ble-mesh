{"ast":null,"code":"const PI = Math.PI;\nconst PI2 = Math.PI * 2;\n\nconst clipValue = (value, min = 0, max = 1) => {\n  return Math.min(Math.max(value, min), max);\n};\n\nconst colors = {\n  black: (opacity = 1.0) => \"rgba(0, 0, 0, \".concat(clipValue(opacity), \")\"),\n  white: (opacity = 1.0) => \"rgba(255, 255, 255, \".concat(clipValue(opacity), \")\"),\n  red: (opacity = 1.0) => \"rgba(226, 39, 39, \".concat(clipValue(opacity), \")\"),\n  green: (opacity = 1.0) => \"rgba(100, 255, 100, \".concat(clipValue(opacity), \")\"),\n  background: (opacity = 1.0) => \"rgba(79, 79, 79, \".concat(clipValue(opacity), \")\"),\n  // grey\n  palette: [(opacity = 1.0) => \"rgba(176, 79, 79, \".concat(clipValue(opacity), \")\"), (opacity = 1.0) => \"rgba(176, 79, 176, \".concat(clipValue(opacity), \")\"), (opacity = 1.0) => \"rgba(43, 211, 252, \".concat(clipValue(opacity), \")\"), (opacity = 1.0) => \"rgba(176, 176, 79, \".concat(clipValue(opacity), \")\"), (opacity = 1.0) => \"rgba(252, 120, 43, \".concat(clipValue(opacity), \")\"), (opacity = 1.0) => \"rgba(176, 176, 176, \".concat(clipValue(opacity), \")\"), (opacity = 1.0) => \"rgba(30, 147, 175, \".concat(clipValue(opacity), \")\")]\n};\n\nconst drawLine = (context, x1, y1, x2, y2, width, stroke = undefined) => {\n  context.beginPath();\n  continueLine(context, x1, y1, x2, y2, width, stroke);\n};\n\nconst continueLine = (context, x1, y1, x2, y2, width, stroke = undefined) => {\n  if (width) {\n    context.lineWidth = width;\n  }\n\n  if (stroke) {\n    context.strokeStyle = stroke;\n  }\n\n  context.moveTo(x1, y1);\n  context.lineTo(x2, y2);\n\n  if (stroke) {\n    context.stroke();\n  }\n};\n\nconst drawArc = (context, x, y, radius, start, end, width, stroke = undefined, fill = undefined) => {\n  context.beginPath();\n  if (stroke) context.strokeStyle = stroke;\n  if (fill) context.fillStyle = fill;\n  context.lineWidth = width;\n  context.arc(x, y, radius, start, end, false);\n  if (stroke) context.stroke();\n  if (fill) context.fill();\n};\n\nconst getDistance = (x1, y1, x2, y2) => {\n  var xDiff = x1 - x2;\n  var yDiff = y1 - y2;\n  return Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n};\n\nconst fakeContext = {\n  restore: () => {},\n  translate: () => {},\n  rotate: () => {},\n  beginPath: () => {},\n  closePath: () => {},\n  moveTo: () => {},\n  lineTo: () => {},\n  arc: () => {},\n  fillRect: () => {},\n  fillText: () => {},\n  save: () => {},\n  fill: () => {},\n  stroke: () => {}\n};\nexport { PI, PI2, clipValue, colors, drawLine, continueLine, drawArc, getDistance, fakeContext };","map":{"version":3,"sources":["/Users/andy/Documents/patchbay-react/patchbay-react/src/modules/DrawUtils.js"],"names":["PI","Math","PI2","clipValue","value","min","max","colors","black","opacity","white","red","green","background","palette","drawLine","context","x1","y1","x2","y2","width","stroke","undefined","beginPath","continueLine","lineWidth","strokeStyle","moveTo","lineTo","drawArc","x","y","radius","start","end","fill","fillStyle","arc","getDistance","xDiff","yDiff","sqrt","fakeContext","restore","translate","rotate","closePath","fillRect","fillText","save"],"mappings":"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","sourcesContent":["const PI = Math.PI;\nconst PI2 = Math.PI * 2;\n\nconst clipValue = (value, min = 0, max = 1) => {\n  return Math.min(Math.max(value, min), max);\n}\n\nconst colors = {\n  black: (opacity = 1.0) => `rgba(0, 0, 0, ${clipValue(opacity)})`,\n  white: (opacity = 1.0) => `rgba(255, 255, 255, ${clipValue(opacity)})`,\n  red: (opacity = 1.0) => `rgba(226, 39, 39, ${clipValue(opacity)})`,\n  green: (opacity = 1.0) => `rgba(100, 255, 100, ${clipValue(opacity)})`,\n  background: (opacity = 1.0) => `rgba(79, 79, 79, ${clipValue(opacity)})`, // grey\n  palette: [\n    (opacity = 1.0) => `rgba(176, 79, 79, ${clipValue(opacity)})`,\n    (opacity = 1.0) => `rgba(176, 79, 176, ${clipValue(opacity)})`,\n    (opacity = 1.0) => `rgba(43, 211, 252, ${clipValue(opacity)})`,\n    (opacity = 1.0) => `rgba(176, 176, 79, ${clipValue(opacity)})`,\n    (opacity = 1.0) => `rgba(252, 120, 43, ${clipValue(opacity)})`,\n    (opacity = 1.0) => `rgba(176, 176, 176, ${clipValue(opacity)})`,\n    (opacity = 1.0) => `rgba(30, 147, 175, ${clipValue(opacity)})`\n  ]\n}\n\nconst drawLine = (context, x1, y1, x2, y2, width, stroke = undefined) => {\n  context.beginPath();\n  continueLine(context, x1, y1, x2, y2, width, stroke);\n}\n\nconst continueLine = (context, x1, y1, x2, y2, width, stroke = undefined) => {\n  if (width) {\n    context.lineWidth = width;\n  }\n  if (stroke) {\n    context.strokeStyle = stroke;\n  }\n  context.moveTo(x1, y1);\n  context.lineTo(x2, y2);\n  if (stroke) {\n    context.stroke();\n  }\n}\n\nconst drawArc = (context, x, y, radius, start, end, width, stroke = undefined, fill = undefined) => {\n  context.beginPath();\n  if (stroke) context.strokeStyle = stroke;\n  if (fill) context.fillStyle = fill;\n  context.lineWidth = width;\n  context.arc(x, y, radius, start, end, false);\n  if (stroke) context.stroke();\n  if (fill) context.fill();\n}\n\nconst getDistance = (x1, y1, x2, y2) => {\n  var xDiff = x1 - x2;\n  var yDiff = y1 - y2;\n  return Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n}\n\nconst fakeContext = {\n  restore: () => {},\n  translate: () => {},\n  rotate: () => {},\n  beginPath: () => {},\n  closePath: () => {},\n  moveTo: () => {},\n  lineTo: () => {},\n  arc: () => {},\n  fillRect: () => {},\n  fillText: () => {},\n  save: () => {},\n  fill: () => {},\n  stroke: () => {}\n};\n\nexport {\n  PI,\n  PI2,\n  clipValue,\n  colors,\n  drawLine,\n  continueLine,\n  drawArc,\n  getDistance,\n  fakeContext\n}\n"]},"metadata":{},"sourceType":"module"}