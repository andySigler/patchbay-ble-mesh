{"ast":null,"code":"import * as utils from './DrawUtils';\nconst testingNodes = [{\n  'name': 'Phone',\n  'inputs': ['Dial', 'Mic'],\n  'outputs': ['Bell']\n}, {\n  'name': 'Biggie',\n  'inputs': [],\n  'outputs': ['Nod', 'Position']\n}, {\n  'name': 'Switch',\n  'inputs': ['State'],\n  'outputs': []\n}, {\n  'name': 'Toy-Pony',\n  'inputs': [],\n  'outputs': ['speed']\n}, {\n  'name': 'Maraca',\n  'inputs': ['Intensity', 'Beat'],\n  'outputs': []\n}, {\n  'name': 'Guitar',\n  'inputs': ['Volume', 'Speed', 'Pitch'],\n  'outputs': []\n}, {\n  'name': 'Lamp',\n  'inputs': [],\n  'outputs': ['Brightness', 'State']\n}, {\n  'name': 'Boombox',\n  'inputs': ['Beat', 'Volume'],\n  'outputs': ['Volume', 'Song']\n}, {\n  'name': 'Snare',\n  'inputs': ['Beat', 'Volume'],\n  'outputs': ['Volume']\n}, {\n  'name': 'Monome',\n  'inputs': ['Pitch', 'State'],\n  'outputs': []\n}, {\n  'name': 'Drawing-Bot',\n  'inputs': [],\n  'outputs': ['Speed', 'Direction', 'Pen-Height']\n}];\n\nfunction makeTestingNodes(patchbay) {\n  // test nodes for playing with patchbay\n  // create a new arc for the Tester\n  const params = patchbay.params;\n  const startingIndex = Math.floor(Math.random() * testingNodes.length);\n\n  for (let index = 0; index < testingNodes.length; index++) {\n    const i = (index + startingIndex) % testingNodes.length;\n    const rColorIndex = i % utils.colors.palette.length;\n    const color = utils.colors.palette[rColorIndex];\n    params.outCircle.addArc(testingNodes[i].name, color, i + 2); // ID ???\n\n    params.inCircle.addArc(testingNodes[i].name, color, i + 2);\n    const rOutputs = testingNodes[i].outputs.length;\n    const totOutArcs = params.outCircle.arcs.length;\n\n    for (let o = 0; o < rOutputs; o++) {\n      params.outCircle.arcs[totOutArcs - 1].addPort(o);\n      params.outCircle.arcs[totOutArcs - 1].ports[o].name = testingNodes[i].outputs[o];\n    }\n\n    const rInputs = testingNodes[i].inputs.length;\n    const totInArcs = params.inCircle.arcs.length;\n\n    for (let o = 0; o < rInputs; o++) {\n      params.inCircle.arcs[totInArcs - 1].addPort(o);\n      params.inCircle.arcs[totInArcs - 1].ports[o].name = testingNodes[i].inputs[o];\n    }\n  }\n\n  for (var c = 0; c < params.inCircle.arcs.length; c++) {\n    if (params.inCircle.arcs[c].ports.length > 0) {\n      for (let d = 0; d < 20; d++) {\n        const outArc = Math.floor(Math.random() * params.outCircle.arcs.length);\n\n        if (params.outCircle.arcs[outArc].ports.length > 0) {\n          const inPort = Math.floor(Math.random() * params.inCircle.arcs[c].ports.length);\n          const outPort = Math.floor(Math.random() * params.outCircle.arcs[outArc].ports.length);\n          sendRoute(params.outCircle.arcs[outArc].id, params.inCircle.arcs[c].id, inPort, outPort);\n          console.log('port made');\n        }\n      }\n    }\n  }\n}\n\nexport { makeTestingNodes };","map":{"version":3,"sources":["/Users/andy/Documents/patchbay-react/patchbay-react/src/modules/TestParams.js"],"names":["utils","testingNodes","makeTestingNodes","patchbay","params","startingIndex","Math","floor","random","length","index","i","rColorIndex","colors","palette","color","outCircle","addArc","name","inCircle","rOutputs","outputs","totOutArcs","arcs","o","addPort","ports","rInputs","inputs","totInArcs","c","d","outArc","inPort","outPort","sendRoute","id","console","log"],"mappings":"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","sourcesContent":["import * as utils from './DrawUtils'\n\nconst testingNodes = [\n  {\n    'name': 'Phone',\n    'inputs': ['Dial', 'Mic'],\n    'outputs': ['Bell']\n  },\n  {\n    'name': 'Biggie',\n    'inputs': [],\n    'outputs': ['Nod', 'Position']\n  },\n  {\n    'name': 'Switch',\n    'inputs': ['State'],\n    'outputs': []\n  },\n  {\n    'name': 'Toy-Pony',\n    'inputs': [],\n    'outputs': ['speed']\n  },\n  {\n    'name': 'Maraca',\n    'inputs': ['Intensity', 'Beat'],\n    'outputs': []\n  },\n  {\n    'name': 'Guitar',\n    'inputs': ['Volume', 'Speed', 'Pitch'],\n    'outputs': []\n  },\n  {\n    'name': 'Lamp',\n    'inputs': [],\n    'outputs': ['Brightness', 'State']\n  },\n  {\n    'name': 'Boombox',\n    'inputs': ['Beat', 'Volume'],\n    'outputs': ['Volume', 'Song']\n  },\n  {\n    'name': 'Snare',\n    'inputs': ['Beat', 'Volume'],\n    'outputs': ['Volume']\n  },\n  {\n    'name': 'Monome',\n    'inputs': ['Pitch', 'State'],\n    'outputs': []\n  },\n  {\n    'name': 'Drawing-Bot',\n    'inputs': [],\n    'outputs': ['Speed', 'Direction', 'Pen-Height']\n  }\n];\n\nfunction makeTestingNodes(patchbay) {\n  // test nodes for playing with patchbay\n  // create a new arc for the Tester\n  const params = patchbay.params;\n  const startingIndex = Math.floor(Math.random() * testingNodes.length);\n  for (let index = 0; index < testingNodes.length; index++) {\n    const i = (index + startingIndex) % testingNodes.length;\n    const rColorIndex = i % utils.colors.palette.length;\n    const color = utils.colors.palette[rColorIndex];\n    params.outCircle.addArc(testingNodes[i].name, color, i + 2); // ID ???\n    params.inCircle.addArc(testingNodes[i].name, color, i + 2);\n    const rOutputs = testingNodes[i].outputs.length;\n    const totOutArcs = params.outCircle.arcs.length;\n    for (let o = 0; o < rOutputs; o++) {\n      params.outCircle.arcs[totOutArcs - 1].addPort(o);\n      params.outCircle.arcs[totOutArcs - 1].ports[o].name = testingNodes[i].outputs[o];\n    }\n    const rInputs = testingNodes[i].inputs.length;\n    const totInArcs = params.inCircle.arcs.length;\n    for (let o = 0; o < rInputs; o++) {\n        params.inCircle.arcs[totInArcs - 1].addPort(o);\n        params.inCircle.arcs[totInArcs - 1].ports[o].name = testingNodes[i].inputs[o];\n    }\n  }\n\n  for (var c = 0; c < params.inCircle.arcs.length; c++) {\n    if(params.inCircle.arcs[c].ports.length > 0) {\n      for (let d = 0; d < 20; d++) {\n        const outArc = Math.floor(\n          Math.random() * params.outCircle.arcs.length);\n        if(params.outCircle.arcs[outArc].ports.length > 0) {\n          const inPort = Math.floor(\n            Math.random() * params.inCircle.arcs[c].ports.length);\n          const outPort = Math.floor(\n            Math.random() * params.outCircle.arcs[outArc].ports.length);\n          sendRoute(\n            params.outCircle.arcs[outArc].id,\n            params.inCircle.arcs[c].id,\n            inPort,\n            outPort\n          );\n          console.log('port made');\n        }\n      }\n    }\n  }\n}\n\nexport { makeTestingNodes }\n"]},"metadata":{},"sourceType":"module"}